{Application 'JS_BASLINE_NG' logic file generated by CSPro}
PROC GLOBAL

array string labels(100);
array numeric codes(100)
array string codesString(100)
numeric AgeRefChid;

PROC CORE_MODULE_FF

PROC A00
preproc
//prepopulate with relevant country code
$ = 21;
PROC A02

onfocus
// create dynamic value set for districts in selected Region
//using lookup file

if loadcase(DISTRICT_LOOK_UP_DICT,A01) = 1 then

	// In the lookup file, DISTRICT_LOOK_UP_REC is a multiply occurring
	// record since there is more than one DISTRICT per REGION. We
	// need to iterate through all the DISTRICTS in the REGION
	// and load them to the value set.
	numeric x;
	do x = 1 while x <= count(DISTRICT_LOOK_UP_DICT.DISTRICT_LOOK_UP_REC)
		labels(x) = DISTRICT_LOOK_UP_DISTRICT_NAME(x);
		codes(x) = DISTRICT_LOOK_UP_DISTRICT(x);
	enddo;
	codes(x) = notappl;
	setvalueset(A02, codes, labels);
endif;
PROC A03

onfocus
// create dynamic value set for communities in selected LGA and state
//using lookup file

if loadcase(COMMUNITY_LOOK_UP_DICT,A02) = 1 then

	// In the lookup file, COMMUNITY_LOOK_UP_REC is a multiply occurring
	// record since there is more than one community per DISTRICT. We
	// need to iterate through all the communitites in the DISTRICT
	// and load them to the value set.
	numeric x;
	do x = 1 while x <= count(COMMUNITY_LOOK_UP_DICT.COMMUNITY_LOOK_UP_REC)
		labels(x) = COMMUNITY_LOOK_UP_COMMUNITY_NAME(x);
		codes(x) = COMMUNITY_LOOK_UP_COMMUNITY(x);
	enddo;
	codes(x) = notappl;
	setvalueset(A03, codes, labels);
endif;
PROC A04

PREPROC
//VILLAGES NOT CONSIDERED IN GHANA SURVEY
$=9999;
PROC A09

if $ = 1 then
	A10 = notappl; 
	skip to A12A;
endif;
PROC A10

if $ = 1 then
	skip to A12A;
endif;
PROC A11

//if person refused to participate save entered data and stop entry of current case
savepartial();
stop();


PROC A14A
PREPROC
//HH LEVEL GPS CORDINATES NOT COLLECTED IN GH SURVEY
//GPS TO BE PREFILLED AT COMMUNITY LEVEL
$=99.9;
PROC A14B
PREPROC
//HH LEVEL GPS CORDINATES NOT COLLECTED IN GH SURVEY
//GPS TO BE PREFILLED AT COMMUNITY LEVEL
$=99;
PROC A14C

preproc
// Pre-fill GPS using lookup file
if loadcase(GPS_LOOK_UP_DICT, A03) = 1 then
	A14C = GPS_LOOK_UP_LONGITUDE;
	A14E = GPS_LOOK_UP_LATITUDE;
endif;
PROC A14D
PREPROC
//HH LEVEL GPS CORDINATES NOT COLLECTED IN GH SURVEY
//GPS TO BE PREFILLED AT COMMUNITY LEVEL
$=99;
PROC A14F
PREPROC
//HH LEVEL GPS CORDINATES NOT COLLECTED IN GH SURVEY
//GPS TO BE PREFILLED AT COMMUNITY LEVEL
$=9999;
PROC A18

preproc
//rare to have a call back
//prefill this field with a zero
$ = 0;

postproc
//skip to A21 if A18 is zero
if $ = 0 then 
	A20 = notappl;
	skip to A21;
endif;
PROC A19

//if call back is true
savepartial();
stop();
PROC A22A

PREPROC
// Fill in first data entry date automatically based on current date
// if in add mode.
if demode() = 1 then
	A22 = sysdate("DDMMYYYY");
endif;

PROC A24A

preproc
if demode() = 3 then
	//This is the first data entry
	//skip to next section
	A24 = sysdate("DDMMYYYY");
else
	//demode() = 3 then
	//This is the second entry which should be the verification entry
	//Automaticaly enter current date
	SKIP TO B_FORM;
endif;
PROC B000

// After adults roster is complete, check to make sure that there is
// exactly one head of household.

numeric numberOfHeads = count(B000 where B3 = 1);

if numberOfHeads <> 1 then
	errmsg("Number of heads of household must be exactly one");
	reenter B3(1);
endif;

// Make sure that the age of the head of household is at least 12
// years greater than the age of his/her children

// First find the index of the head.
numeric indexHead = seek(B3 = 1);
numeric x;

// Compare age of head to age of each child
numeric AGE = 2015 - B4(indexHead);
do x = 1 while x <= totocc(B000)
	//compute child's age
	numeric childAge = 2015 - B4(x);
	if B3(x) = 3 and AGE - childAge < 12 then
		errmsg("Child %s is %d years old but head %s is %d. Parent must be at least 12 years older than child.",
				strip(B1(x)), 
				childAge,
				strip(B1(indexHead)), 
				AGE)
				select("Correct year of birth of " + strip(B1(x)), B4(x),
					   "Correct year of birth of " + strip(B1(indexHead)), B4(x),
					   "Correct relationship of " + strip(B1(x)), B3(x),
					   "Correct relationship of " + strip(B1(indexHead)), B3(indexHead));
	endif;
enddo;


// Ensure that if head of household has one or more spouses in household that he/she is
// married.
numeric indexOfSpouse = seek(B3 = 2);
if indexOfSpouse > 0 and B7(indexHead) <> 2 then
	errmsg("The head of household is not married but there is at least one spouse of head in the household")
	select("Correct marital status of head", B7(indexHead),
		   "Correct relationship of spouse", B3(indexOfSpouse));
endif;
 			   
// Make sure that head and spouse are of different genders.
do x = 1 while x <= totocc(B000)
	if B3(x) = 2 then
		if B2(x) = B2(indexHead) then
			errmsg("Head of household and spouse (%s) are of same gender", strip(B1(x)))
				select("Correct sex of head", B2(indexHead),
					   "Correct sex of " + strip(B1(x)), B2(x));
		endif;
	endif;
enddo;

//check for any records after the row with mem numberand delete them to cleanup rooser
//numeric lastRow = seek(MEM = 99);
//do x = lastRow while x <= totocc(B000)
//	delete(B000(lastRow)); 
//enddo;

PROC MEM

// End roster when blank mem number is entered
//check if MEM number is eqaul to current occurence number
//force reenter if not
if $ = 99 then
	if accept("Finished entering household members 5 years and over?", 
			  "yes", "no") = 1 then
		endgroup;
	else
		reenter;
	endif;
else
	if $ <> curocc() then
		errmsg("MEM number must be equal to current occurence number");
		reenter;
	endif;
endif;

PROC B4

// Do not allow head of household to be under 12 years of age.
numeric hhAge = 2015 - b4;
if B3 = 1 and hhAge < 12 then
	errmsg("%s cannot be head of household and only %d years old", 
	    strip(B1), hhAge)
		select("Correct Relationship", B3,
			   "Correct Year HH Born", B4);
endif;
PROC B6

// Soft check for college students/graduates under 18
//compute persons age using year born field
numeric AGE = 2015 - B4;
if AGE < 18 and B6 >= 13 then
	errmsg("Age is %d but level education is college or graduate. Are you sure this is correct?",
			AGE)
		  select("Correct Year Born", B4,
		         "Correct education", B6,
		         "Ignore", continue);
endif;
PROC B10

// Soft check for HH members under 10 and response is yes
//compute persons age using year born field
numeric AGE = 2015 - B4;
if $ = 1 and AGE < 10 then
	errmsg("Age is %d but should be more than 10 years. Are you sure this is correct?",
			AGE)
		  select("Correct Year Born", B4,
		         "Correct response given", $,
		         "Ignore", continue);
endif;
PROC B11

// Soft check for HH members under 10
//compute persons age using year born field
numeric AGE = 2015 - B4;
if $ = 1 and AGE < 10 then
	errmsg("Age is %d but should be more than 10 years. Are you sure this is correct?",
			AGE)
		  select("Correct Year Born", B4,
		         "Correct response given", $,
		         "Ignore", continue);
endif;
PROC B12

// Soft check for HH members under 10
//compute persons age using year born field
numeric AGE = 2015 - B4;
if $ = 1 and AGE < 10 then
	errmsg("Age is %d but should be more than 10 years. Are you sure this is correct?",
			AGE)
		  select("Correct Year Born", B4,
		         "Correct response given", $,
		         "Ignore", continue);
endif;
PROC B13

// Soft check for HH members under 10
//compute persons age using year born field
numeric AGE = 2015 - B4;
if $ = 1 and AGE < 10 then
	errmsg("Age is %d but should be more than 10 years. Are you sure this is correct?",
			AGE)
		  select("Correct Year Born", B4,
		         "Correct response given", $,
		         "Ignore", continue);
endif;
PROC B14

// Soft check for HH members under 10
//compute persons age using year born field
numeric AGE = 2015 - B4;
if $ = 1 and AGE < 10 then
	errmsg("Age is %d but should be more than 10 years. Are you sure this is correct?",
			AGE)
		  select("Correct Year Born", B4,
		         "Correct response given", $,
		         "Ignore", continue);
endif;
PROC C000

//check for any records after the row with mem numberand delete them to cleanup rooser
//numeric x;
//numeric lastRow = seek(MEM_CHILD = 99);
//do x = lastRow while x <= totocc(C000)
//	delete(C000(x)); 
//enddo;

PROC MEM_CHILD

// End roster when blank mem number is entered
if $ = 99 then
	if accept("Finished entering household members 5 years and below?", 
			  "yes", "no") = 1 then
		endgroup;
	else
		reenter;
	endif;
else
	if $ <> (curocc() + 30) then
		errmsg("MEM number must be equal to (current occurence + 30)");
		reenter;
	endif;
endif;
PROC C05

if $ <> 9999 then 

	// Ensure that age of the child is not more than 60 months
	
	// datediff wants dates in YYYYMMDD format so we need to convert
	numeric dobInYYYYMMDD = C05 * 10000 
							+ C04 * 100 
							+ C03;
							
	numeric ageInMonthsFromDOB = datediff(dobInYYYYMMDD, 
										  sysdate("YYYYMMDD"), "m");
										  
	AgeRefChid = ageInMonthsFromDOB;
	
	if ageInMonthsFromDOB > 60 then
		errmsg("Age of child, %d months, greater than 60 months",
			   ageInMonthsFromDOB)
			   select("Correct day of birth", C03,
			   	      "Correct month of birth", C04,
			   	      "Correct year of birth", C05);
	endif;
endif;
PROC C6

if $ = 0 then
	skip to C9;
endif;
PROC C9

onfocus
// Create the value set for child mother from all eligible
// women in section B
numeric x;
numeric nextEntry = 1;
do x = 1 while x <= totocc(B000)

	if B2(x) = 0 and ((2015 - B4(x)) >= 12) then
		labels(nextEntry) = B1(x);
		codes(nextEntry) = x;
		nextEntry = nextEntry + 1;
	endif;
enddo;
labels(nextEntry) = "Deceased";
codes(nextEntry) = 88;
nextEntry = nextEntry + 1;
labels(nextEntry) = "non-resident";
codes(nextEntry) = 99;
nextEntry = nextEntry + 1;
codes(nextEntry) = notappl;
setvalueset(C9, codes, labels);

postproc

// Ensure that line number of mother is line number of woman over 12
// in section B roster.
if not C9 in 88:99 then

	if B2(C9) = notappl then
		// Sex is blank, must be an empty row in section B roster
		errmsg("%d is not a valid line in section B. Must be between 1 and %d.", 
			C9, totocc(B000));
		reenter;
	endif;
	
	if B2(C9) = 1 then
		errmsg("Sex of mother %s is male", 
		       strip(B1(C9)))
			   select("Correct mother IDNO", 
			          C9,
				      "Correct sex of " + strip(B1(C9)), 
				      B2(C9));
	endif;
	
	if (2015 - B4(C9)) < 12 then
		errmsg("Age of mother %s is %d but must be at least 12", 
		       strip(B1(C9)), (2015 - B4(C9)))
			   select("Correct mother IDNO", C9,
				      "Correct year of birth of " + strip(B1(C9)), 
				      B4(C9));
	endif;
	
endif;

//skip C10 if valid monther is selected in C9
if C9 < 87 then
	skip to C11;
endif;

set behavior(C8,C9,C10,C11,C12) canenter(notappl) on (noconfirm);

PROC C10

onfocus
// Create the value set for child main female care giver from all eligible
// women in section B if real mother missing
if C9 > 87 then
	numeric x;
	numeric nextEntry = 1;
	do x = 1 while x <= totocc(B000)
		if B2(x) = 0 and ((2015 - B4(x)) >= 12) then
			labels(nextEntry) = B1(x);
			codes(nextEntry) = x;
			nextEntry = nextEntry + 1;
		endif;
	enddo;
	codes(nextEntry) = notappl;
	setvalueset(C10, codes, labels);
endif;
PROC C11

onfocus
// Create the value set for child mother from all eligible
// men in section B
numeric x;
numeric nextEntry = 1;
do x = 1 while x <= totocc(B000)

	if B2(x) = 1 and ((2015 - B4(x)) >= 12) then
		labels(nextEntry) = B1(x);
		codes(nextEntry) = x;
		nextEntry = nextEntry + 1;
	endif;
enddo;
labels(nextEntry) = "Deceased";
codes(nextEntry) = 88;
nextEntry = nextEntry + 1;
labels(nextEntry) = "Non-resident";
codes(nextEntry) = 99;
nextEntry = nextEntry + 1;
codes(nextEntry) = notappl;
setvalueset(C11, codes, labels);

postproc
//skip C12 if valid father is selected in C11
if C11 < 87 then
	skip to next MEM_CHILD;
endif;
PROC C12
onfocus
// Create the value set for child main male caregiver from all eligible
// men in section B
if C11 > 87 then
	numeric x;
	numeric nextEntry = 1;
	do x = 1 while x <= totocc(B000)
	
		if B2(x) = 1 and ((2015 - B4(x)) >= 12) then
			labels(nextEntry) = B1(x);
			codes(nextEntry) = x;
			nextEntry = nextEntry + 1;
		endif;
	enddo;
	codes(nextEntry) = notappl;
	setvalueset(C12, codes, labels);
endif;
PROC D01

onfocus
// Create the value set for reference woman from all eligible
// women in section B
numeric x;
numeric nextEntry = 1;
do x = 1 while x <= totocc(B000)

	if B2(x) = 0 and ((2015 - B4(x)) >= 12) then
		labels(nextEntry) = B1(x);
		codes(nextEntry) = x;
		nextEntry = nextEntry + 1;
	endif;
enddo;
labels(nextEntry) = "NA";
codes(nextEntry) = 99;
nextEntry = nextEntry + 1;
codes(nextEntry) = notappl;
setvalueset(D01, codes, labels);
PROC D02

onfocus
// Create the value set for reference child from all children
// in section C
numeric x;
numeric nextEntry = 1;
do x = 1 while x <= totocc(C000)
		labels(nextEntry) = C01(x);
		codes(nextEntry) = x + 30;
		nextEntry = nextEntry + 1;
enddo;
labels(nextEntry) = "NA";
codes(nextEntry) = 99;
nextEntry = nextEntry + 1;
codes(nextEntry) = notappl;
setvalueset(D02, codes, labels);
PROC D03B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D04B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D05B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D06B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D07B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D08B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D09B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D10B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D11B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D12B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D13B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D14B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D15B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D16B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D17B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D18B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D19B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D20B
//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D21A

//if there is no reference child fill NA and skip to next field
preproc
if D02 = 99 then
	$=999.99;
	noinput;
endif;
PROC D21B

//if there is no reference child fill 9 and skip to next field
preproc
if D02 = 99 then
	$=9;
	noinput;
endif;
PROC D22A

if $<>4 then 
	skip to E_FORM;
endif;
PROC E000

//if farmer is not a member of any association or group
//endgroup to close rooster
preproc
if E01 = 0 then 
	endgroup;
endif;

PROC MEM_IN_GROUPS

onfocus
// Create the value set for HH members from all eligible
// adults (over 12 years) in section B
numeric x;
numeric nextEntry = 1;
do x = 1 while x <= totocc(B000)
	if  ((2015 - B4(x)) >= 12) then
		labels(nextEntry) = B1(x);
		codes(nextEntry) = x;
		nextEntry = nextEntry + 1;
	endif;
enddo;
labels(nextEntry) = "Finish entering groups";
codes(nextEntry) = 99;
nextEntry = nextEntry + 1;
codes(nextEntry) = notappl;
setvalueset(MEM_IN_GROUPS, codes, labels);

postproc
//endgroup if 99 is selected
if $ = 99 then 
	endgroup;
endif;
PROC E06C
//only one of the three measurements should be completed
if E06A > 0 and E06B > 0 then
		errmsg("There is more than one response to this question. Please review")
		select("Edit M^2", E06A,
			   "Edit Acres", E06B); 
		if E06A > 0 and E06C > 0 then
			errmsg("There is more than one response to this question. Please review")
			select("Edit M^2",E06A,
				   "Edit Ha",E06C);

			if E06B > 0 and E06C > 0 then
				errmsg("There is more than one response to this question. Please review")
				select("Edit Acres",E06B,
					   "Edit Ha",E06C);
			endif;
		endif;
endif;
PROC E07C

if E07A > 0 and E07B > 0 then
		errmsg("There is more than one response to this question. Please review")
		select("Edit M^2", E07A,
			   "Edit Acres", E07B); 
		if E07A > 0 and E07C > 0 then
			errmsg("There is more than one response to this question. Please review")
			select("Edit M^2",E07A,
				   "Edit Ha",E07C);

			if E07B > 0 and E07C > 0 then
				errmsg("There is more than one response to this question. Please review")
				select("Edit Acres",E07B,
					   "Edit Ha",E07C);
			endif;
		endif;
endif;
PROC E08C

if E08A > 0 and E08B > 0 then
		errmsg("There is more than one response to this question. Please review")
		select("Edit M^2", E08A,
			   "Edit Acres", E08B); 
		if E08A > 0 and E08C > 0 then
			errmsg("There is more than one response to this question. Please review")
			select("Edit M^2",E08A,
				   "Edit Ha",E08C);

			if E08B > 0 and E08C > 0 then
				errmsg("There is more than one response to this question. Please review")
				select("Edit Acres",E08B,
					   "Edit Ha",E08C);
			endif;
		endif;
endif;
PROC E10

if $ > E09 then 
	errmsg("Fertile plots, %d, cannot be more than the total number of plots, %d",E10, E09)
			select("Correct total plots number", E09,
					"Correct plots with fertile soils number",E10);
endif;			
PROC E11

if $ > E09 then 
	errmsg("Number entered, %d, cannot be greater than the total plots, %d",E10, E09)
			select("Correct total plots number", E09,
					"Correct plots with fertile soils number",E10);
elseif 
	E11 <> 0 then
	skip to E13A;
endif;
PROC F02

preproc
$ = curocc();
noinput;
PROC F02A

preproc
$ = getlabel(F02,F02);
PROC F04

preproc
//if HH did not produce crop the crop should not be an option for sale
if F03 = 0 OR F03 = 9 then
	F04 = 9;
	noinput;
endif;
PROC F05

preproc
//if HH did not produce crop the crop should not be an option for sale
if F03 = 0 or F03 = 9 then
	F05 = 99;
	noinput;
endif;
PROC F21

preproc
$ = (13 + curocc());
noinput;
PROC F21A

preproc
$ = getlabel(F21,F21);
PROC F23

preproc
//if HH did not produce crop the crop should not be an option for sale
if F22 = 0 or F22 = 9 then
	F23 = 9;
	noinput;
endif;
PROC F24

preproc
//if HH did not produce crop the crop should not be an option for sale
if F22 = 0 or F22 = 9 then
	F24 = 0;
	noinput;
endif;
PROC F06

if $ = 99 then
	skip to F11;
else
	//check if crop was produced
	numeric CropProduced;
	numeric CropProducedOthers;
	numeric WasCropProduced = 0;
	CropProduced = seek(F02 = F06 and F03 = 1);
	CropProducedOthers = seek(F21 = F06 and F22 = 1);
	if CropProduced > 0 or CropProducedOthers > 0 then
		WasCropProduced = 1;
	endif;
	if WasCropProduced > 0 then
		//if crop entered is cassava/sweetpotato/yam
		//skip the corresponding quantity section
		if F06 = 4 or F06 = 5 or F06 = 7 then
			F07=notappl;
			F08=notappl;
			F09=notappl;
			F10=notappl;
			skip to F11;
		endif; 
	else
		errmsg("Crop entered was not produced in 2014/2015 season")
				select("Enter another crop", F06,
						"Correct production status", F03(WasCropProduced));
	endif;
endif;
PROC F11

if $ = 99 then
	skip to F16;
else
	numeric CropProduced;
	numeric CropProducedOthers;
	numeric WasCropProduced = 0;
	CropProduced = seek(F02 = F11 and F03 = 1);
	CropProducedOthers = seek(F21 = F11 and F22 = 1);
	if CropProduced > 0 or CropProducedOthers > 0 then
		WasCropProduced = 1;
	endif;
	if WasCropProduced > 0 then
		//if crop entered is cassava/sweetpotato/yam
		//skip the corresponding quantity section
		if F11 = 4 or F11 = 5 or F11 = 7 or F11 = 99 then
			F12=notappl;
			F13=notappl;
			F14=notappl;
			F15=notappl;
			skip to F16;
		endif; 
	else
		errmsg("Crop entered was not produced in 2014/2015 season")
				select("Enter another crop", F11,
						"Correct production status", F03(WasCropProduced));
	endif; 
	
	//check that crop listed as second highest is not
	//same as crop with highest prodcution
	if $ = F06 then
		errmsg("Crop entered same as crop with highest production")
				select("Enter new Highest producing crop", F11,
					   "Enter new Second Highest producing crop", F06);
	endif;
endif;
PROC F16

if $ = 99 then
	skip to G_FORM;
else
	numeric CropProduced;
	numeric CropProducedOthers;
	numeric WasCropProduced = 0;
	CropProduced = seek(F02 = F16 and F03 = 1);
	CropProducedOthers = seek(F21 = F16 and F22 = 1);
	if CropProduced > 0 or CropProducedOthers > 0 then
		WasCropProduced = 1;
	endif;
	if WasCropProduced > 0 then
		//if crop entered is cassava/sweetpotato/yam
		//skip the corresponding quantity section
		if F16 = 4 or F16 = 5 or F16 = 7 or F16 = 99 then
			F17=notappl;
			F18=notappl;
			F19=notappl;
			F20=notappl;
			skip to G_FORM;
		endif;
	else
			errmsg("Crop entered was not produced in 2014/2015 season")
				select("Enter another crop", F16,
						"Correct production status", F03(WasCropProduced));  
	endif;
	//check that crop listed as third highest is not
	//same as crop with highest and second highest prodcution
	if $ = F06 or $ = F11 then
		errmsg("Crop already entered above")
				select("Enter new Highest producing crop", F11,
					   "Enter new Second Highest producing crop", F06,
					   "Enter new Third highest producing crop", F16);
	endif;
endif;
PROC G_CROP_SALE000

//if no crop sale skip to next section 
preproc
if G01 = 0 then
	endgroup;
endif;
PROC G04

postproc
//check that this crop was produced and sold
numeric WasCropProduced = seek(F02 = G04 and F03 = 1);
numeric WasCropSold = seek(F02 = G04 and F04 = 1);

//if 99is entered the rooster should terminate

//Check that sweetpotato, cassava and yam should are not on this table
if G04 = 99 then
	endgroup;
//else
	if G04 = 4 or G04 = 5 or G04 = 7 then
		Errmsg("Cassava, Yam and Sweetpotato should not be on this table");
		reenter;
	endif;
//else
	if	WasCropProduced > 0 then
		errmsg("Crop was not produced. Review production table")
				Select("Correct production status", F03(WasCropProduced),
						"Enter different crop", G04);
	endif;
//else
	if	WasCropSold > 0 then
	errmsg("Crop was not sold. Review sales table")
			Select("Correct sales status", F04(WasCropProduced),
					"Enter different crop", G04);
	endif;
endif;

//get label to populate crop sold name from crops valueset
G03  = getlabel(G04,G04);
	
PROC G08B

preproc
if G08 <> 20 then
	noinput;
	skip to G09;
endif;
PROC G12A

preproc
if G12 <> 7 then
	noinput;
	skip to G13;
endif;
PROC G13A

preproc
if G13 <> 12 then
	noinput;
	skip to G14;
endif;
PROC H04A
//check if other option is selected
if H04A <> 7 then
	skip to I_FORM;
endif;
PROC I01

//skip I02 if grew SP
if I01 = 1 then 
	I02 = notappl;
	skip to I03;
endif;
PROC I02

postproc
//if did not grow SP skip to I07
if I01 = 0 then
	I03 = notappl;
	I03A = notappl;
	I03B = notappl;
	I03C = notappl;
	I03D = notappl;
	I03E = notappl;
	I04 = notappl;
	I05 = notappl;
	I06 = notappl;
	skip to I_1_SP_PROD000;
endif;
PROC I03B

postproc
//only one of the three measurements should be completed
if I03 > 0 and I03A > 0 then
		errmsg("There is more than one response to this question. Please review")
		select("Edit M^2", I03,
			   "Edit Acres", I03A); 
		if I03 > 0 and I03B > 0 then
			errmsg("There is more than one response to this question. Please review")
			select("Edit M^2",I03,
				   "Edit Ha",I03B);

			if I03A > 0 and I03B > 0 then
				errmsg("There is more than one response to this question. Please review")
				select("Edit Acres",I03A,
					   "Edit Ha",I03B);
			endif;
		endif;
endif;
PROC I03E

postproc
//only one of the three measurements should be completed
if I03C > 0 and I03D > 0 then
		errmsg("There is more than one response to this question. Please review")
		select("Edit M^2", I03C,
			   "Edit Acres", I03D); 
		if I03C > 0 and I03E > 0 then
			errmsg("There is more than one response to this question. Please review")
			select("Edit M^2",I03C,
				   "Edit Ha",I03E);

			if I03D > 0 and I03E > 0 then
				errmsg("There is more than one response to this question. Please review")
				select("Edit Acres",I03D,
					   "Edit Ha",I03E);
			endif;
		endif;
endif;
PROC I08

preproc

if curocc() = 1 then
	$ = 27;
	noinput;
endif;

if curocc() = 2 then
	$ = 5;
	noinput;
endif;

if curocc() = 3 then
	$ = 7;
	noinput;
endif;

if curocc() = 4 then
	$ = 4;
	noinput;
endif;

	
postproc
I07 = getlabel ($,$);

//check if HH grew SP
if I01 = 0 then
	if $ = 27 or $ = 5 then
		skip to next I08;
	endif;
endif;

//check if HH grew OFSP
if I05 = 0 then
	if $ = 27 then
		skip to next I08;
	endif;
endif;


PROC I16

//IF RESPONSE IS NO SKIP TO NEXT OCCURENCE
if I16 = 0 then 
	I17A = notappl;
	I17B = notappl;
	skip to next I08;
endif;

PROC I18B

//fetch label for crop from valueset
I18A = getlabel (I18B,I18B);

//EXIT ROOSER IF CROPCODE 99 IS SELECTED
if I18B = 99 then
	endgroup;
endif;
PROC I25B

//check duplicate sales reasons
if I25A <> 99 then
	if I25A = I25B then
		errmsg("Response not unique");
		reenter;
	endif;
endif;
PROC I25C

//check duplicate sales reasons
if I25A <> 99 then
	if I25A = I25C then
		errmsg("Response not unique");
		reenter;
	endif;
endif;

if I25B <> 99 then
	if I25B = I25C then
		errmsg("Response not unique");
		reenter;
	endif;
endif;
PROC J06

if J06 = 0 then
	J07A = notappl;
	J07B = notappl;
	J07C = notappl;
	J07D = notappl;
	J07E = notappl;
	J07F = notappl;
	skip to J08;
endif;
PROC J08

preproc
if J06 = 1 then 
	noinput;
endif;
PROC K12

if K12 = 0 then 
	skip to K14;
endif;
PROC K14

preproc
if K12 = 1 then
	skip to K15;
endif;

postproc
if K14 <> 3 then
	skip K14A;
endif;
PROC L04B

preproc

if L04A = 9 then
	skip to L05;
endif;
PROC L_1000

preproc
//if no one gave/sold sp vines in last 12 months
//skip this table
if L08 = 0 and L09 = 0 then
	endgroup;
endif; 
PROC L11

//EXIT ROOSER IF CROPCODE 99 IS SELECTED
if $ = 99 then
	endgroup;
endif;
PROC L20

if L20 = 0 then
	skip to next L11;
endif;
PROC L22

if $ <> 9 then
	if $ < 3 then
		errmsg("Currecy must be Naira");
		reenter;
	endif;
endif;
PROC L_2000

preproc
//if no one receive/buy sp vines in last 12 months from sources other than own farm
//skip this table
if L06 = 0 and L07 = 0 then
	endgroup;
endif; 
PROC L24

//EXIT ROOSER IF CROPCODE 99 IS SELECTED
if $ = 99 then
	endgroup;
endif;
PROC L36

//Check that currency is either a missing value or a valid country currency (GH Cedis)
if $ <> 9 then
	if $ <> 2 then
		errmsg("Currecy must be Naira");
		reenter;
	endif;
endif;
PROC L39

if $ = 2 then 
	L40 = 9;
	skip to L41;
endif;
PROC L41


if $ = 2 then 
	skip to L43;
endif;
PROC L45

if L45 = 2 then 
	skip to L47;
endif;
PROC L47

if L47 = 2 then 
	skip to L49;
endif;
PROC L49

if L49 = 2 then 
	skip to L55;
endif;
PROC L57

if $ = 0 then 
	L57A = 9;
	skip to L58;
endif;
PROC L58

if $ = 0 then 
	L58A = 9;
	skip to L59;
endif;
PROC M01

onfocus
// Create the value set for HH members from all eligible
// adults (over 12 years) in section B
numeric x;
numeric nextEntry = 1;
do x = 1 while x <= totocc(B000)
	if  ((2015 - B4(x)) >= 12) then
		labels(nextEntry) = B1(x);
		codes(nextEntry) = x;
		nextEntry = nextEntry + 1;
	endif;
enddo;
labels(nextEntry) = "NA";
codes(nextEntry) = 99;
nextEntry = nextEntry + 1;
codes(nextEntry) = notappl;
codes(nextEntry) = notappl;
setvalueset(M01, codes, labels);
PROC M02


onfocus
// Create the value set for HH members from all eligible
// adults (over 12 years) in section B
numeric x;
numeric nextEntry = 1;
do x = 1 while x <= totocc(B000)
	if  ((2015 - B4(x)) >= 12) then
		labels(nextEntry) = B1(x);
		codes(nextEntry) = x;
		nextEntry = nextEntry + 1;
	endif;
enddo;
labels(nextEntry) = "NA";
codes(nextEntry) = 99;
nextEntry = nextEntry + 1;
codes(nextEntry) = notappl;
codes(nextEntry) = notappl;
setvalueset(M02, codes, labels);
PROC M03

if M03 <> 7 then
	skip to M04;
endif;
PROC M04

if M04 = 0 then 
	skip to M08;
endif;
PROC M12A

if $ <> 5 then
	skip to M13; 
endif;
PROC M13

if $ <> 4 then
	skip to M14; 
endif;
PROC M14

if M14 = 0 then 
	skip to M16; 
endif;
PROC M15

if $ <> 5 then
	skip to M16; 
endif;
PROC M16

if M16 = 0 then 
	skip to M18; 
endif;
PROC M17

if $ <> 5 then
	skip to M18; 
endif;
PROC M20

if M20 <> 5 then
	skip to M21A;
endif;
PROC M22

if M22 <> 2 then
	skip to M24;
endif;
PROC M29

if $ = 1 then 
	skip to M31;
endif;
PROC M31

if $ = 0 then 
	skip to M33;
endif;
PROC M33

if $ = 0 then 
	skip to M35A;
endif;
PROC M36

if $ = 0 then 
	skip to M39;
endif;
PROC M37A

if $ = 0 or $ = 9 then 
	M38_PILE = 00;
	M38_PILE_UNITS = 9;
	skip to M37_SACK;
endif;
	
PROC M37_SACK

if $ = 0 or $ = 9 then 
	M38_SACK = 00;
	M38_SACK_UNITS = 9;
	skip to M37_PIT;
endif;
	
PROC M37_PIT

if $ = 0 or $ = 9 then 
	M38_PIT = 00;
	M38_PIT_UNITS = 9;
	skip to M37_WOOD;
endif;
PROC M37_WOOD
if $ = 0 or $ = 9 then 
	M38_WOOD = 00;
	M38_WOOD_UNITS = 9;
	skip to M37_ASH;
endif;
PROC M37_ASH

if $ = 0 or $ = 9 then 
	M38_ASH = 00;
	M38_ASH_UNITS = 9;
	skip to M37_SAND;
endif;
PROC M37_SAND

if $ = 0 or $ = 9 then 
	M38_SAND = 00;
	M38_SAND_UNITS = 9;
	skip to M37_SOIL;
endif;
PROC M37_SOIL

if $ = 0 or $ = 9 then 
	M38_SOIL = 0;
	M38_SOIL_UNITS = 9;
	skip to M37_OTHER;
endif;
PROC M39

if $ = 0 then 
	skip to M43;
endif;
PROC M40

if $ <> 3 then
	skip to M41A; 
endif;
PROC M42

if $ <> 4 then
	skip to M43; 
endif;
PROC M43

if $ = 0 then 
	skip to M47A;
endif;
PROC N01

//skip section if has not heard about vitamin A
if N01 = 0 then
	skip to O01;
endif;
PROC N04A

if $ <> 13 then
	skip to N04B;
endif;
PROC N04B

if $ <> 13 then
	skip to N04C;
endif;
PROC N04C

if $ <> 13 then
	skip to O01;
endif;
PROC O02

if $ <> 6 then
	skip to O03;
endif;
PROC P00

preproc
//prefill ref child from field D02
P00 = D02;
noinput;

postproc
if $ = 99 then
	P01 = 9;
	P03 = 9;
	P04A = 9;
	skip to P08A;
endif;
PROC P01

if $ = 0 then
	skip to P03;
endif;
PROC P03

if $ = 1 then
	skip to P05;
endif;
PROC P07A

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07B

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07C

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07D

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07E

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07F

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07G

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07H

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07I

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07J

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07K

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07L

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07M

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07N

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07O

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07P

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07Q

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07R

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07S

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07T

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07U

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07V

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07W

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07X

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07Y

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07Z

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07AA

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07BB

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07CC

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07DD

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07EE

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07FF

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07GG

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07HH

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07II

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07JJ

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07KK

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07LL

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07MM

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07NN

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07OO

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P07PP

preproc
if P00 = 99 then
	$ = 9;
	noinput;
endif;
PROC P09

if $ <> 4 then 
	skip to P10;
endif;
PROC Q01

preproc
//prefill ref child from field D02
P00 = D02;
noinput;

postproc
if $ = 99 then
	skip to Q22;
endif;
PROC Q02

//prefill gender of ref child
preproc
if Q01 <> 99 then
	$ = C02((Q01-30));
endif;
PROC Q03A

preproc
if Q01 <> 99 then
	//prefill DoB
	$ = C03((Q01-30));
	noinput;
endif;
PROC Q03B

preproc
	if Q01 <> 99 then
	$ = C04((Q01-30));
	noinput;
endif;
PROC Q03C

preproc
if Q01 <> 99 then
	$ = C05((Q01-30));
	noinput;
endif;
PROC Q06

if $ = 1 then
	skip to Q08; 
endif;
PROC Q09

if $ = 0 then
	skip to Q11;
endif;
PROC Q11

if $ = 0 then 
	skip to Q13; 
endif;
PROC Q16

if $ = 0 then 
	skip to Q18; 
endif;
PROC Q19

if Q18 = 0 and Q19 = 0 then
	skip to R_FORM; 
endif;
PROC Q22

if $ = 0 then 
	skip to Q22G;
endif;
PROC Q22C

//only one of the three measurements should be completed
if Q22A > 0 and Q22B > 0 then
		errmsg("There is more than one response to this question. Please review")
		select("Edit M^2", Q22A,
			   "Edit Acres", Q22B); 
		if Q22A > 0 and Q22C > 0 then
			errmsg("There is more than one response to this question. Please review")
			select("Edit M^2",Q22A,
				   "Edit Ha",Q22C);

			if Q22B > 0 and Q22C > 0 then
				errmsg("There is more than one response to this question. Please review")
				select("Edit Acres",Q22B,
					   "Edit Ha",Q22C);
			endif;
		endif;
endif;
PROC Q22F

//only one of the three measurements should be completed
if Q22D > 0 and Q22E > 0 then
		errmsg("There is more than one response to this question. Please review")
		select("Edit M^2", Q22D,
			   "Edit Acres", Q22E); 
		if Q22D > 0 and Q22F > 0 then
			errmsg("There is more than one response to this question. Please review")
			select("Edit M^2",Q22D,
				   "Edit Ha",Q22F);

			if Q22E > 0 and Q22F > 0 then
				errmsg("There is more than one response to this question. Please review")
				select("Edit Acres",Q22E,
					   "Edit Ha",Q22F);
			endif;
		endif;
endif;
PROC Q22G

preproc
if Q22 = 1 then 
	noinput;
endif;
PROC R01A

if $ = 0 then
	R01B = 9; 
	skip to R02A; 
endif;
PROC R02A

if $ = 0 then
	R02B = 9; 
	skip to R03A; 
endif;
PROC R03A

if $ = 0 then
	R03B = 9; 
	skip to R04A; 
endif;
PROC R04A

if $ = 0 then
	R04B = 9; 
	skip to R05A; 
endif;
PROC R05A

if $ = 0 then
	R05B = 9; 
	skip to R06A; 
endif;
PROC R06A

if $ = 0 then
	R06B = 9; 
	skip to R07A; 
endif;
PROC R07A

if $ = 0 then
	R07B = 9; 
	skip to R08A; 
endif;
PROC R08A

if $ = 0 then
	R08B = 9; 
	skip to R09A; 
endif;
PROC R09A

if $ = 0 then
	R09B = 9; 
	skip to R10A; 
endif;
PROC S01

preproc

$ = curocc();

postproc
if $ = 99 then 
	endgroup;
endif;
PROC S01A

$ = getlabel (S01,S01);
PROC S02

if $ = 0 then
	S03 = 0;
	S04 = 9;
	skip to next S01;
endif;

if $ = 9 then
	S03 = 9;
	S04 = 9;
	skip to next S01;
endif;
PROC S07

preproc
if S06 = 0 then 
	skip to S09;
endif; 
PROC S10

if $ = 0 then
	skip to S12;
endif;
PROC S11

if S10 = 0 then 
	skip to T_FORM;
endif; 
PROC T02

preproc

$ = curocc();

postproc
if $ = 99 then 
	endgroup;
endif;
PROC T02A

preproc
$ = getlabel(T02,T02);
PROC T03

if $ = 0 or $ = 9 then
	T06 = 9;
	skip to next T02;
endif;

PROC T04

if $ > 0 then 
	skip to T06;
endif; 
PROC T07

if $ <> 4 then
	skip to T08;
endif;
PROC T08
if $ <> 7 then
	skip to T09;
endif;
PROC T09

if $ <> 5 then
	skip to T10;
endif;
PROC T10

if $ <> 7 then
	skip to T11;
endif;
PROC T11

if $ = 0 then
	skip to T13;
endif;
PROC T12

if $ <> 5 then
	skip to T13;
endif;
PROC T15

if $ <> 16 then
	skip to T16;
endif;
PROC T17

if $ <> 9 then
	skip to T18;
endif;
PROC T18

if $ <> 9 then
	skip to T19;
endif;
